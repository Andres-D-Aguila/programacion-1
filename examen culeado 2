#include <iostream>
#include <conio.h>

#define FIL 7
#define COL 7

using namespace std;


struct matdemat{
	int submat[FIL][COL];
	int submatN;
	int submatM;
};

void cargar (int mat[FIL][COL], int n, int m)
{
	int i,j;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			cout<<"ingrese el elemento ["<<i<<"] ["<<j<<"] : ";
			cin>>mat[i][j];
		}
	}
}

void cargarmatdemat(matdemat mat[FIL][COL], int n, int m)
{
	int i,j;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			cout<<"ingrese el numero de filas de la submatriz ["<<i<<"] ["<<j<<"] : ";
			cin>>mat[i][j].submatN;
			cout<<"ingrese el numero de columnas de la submatriz ["<<i<<"] ["<<j<<"] : ";
			cin>>mat[i][j].submatM;
			cargar(mat[i][j].submat,mat[i][j].submatN,mat[i][j].submatM);
		}
	}
}

void mostrar (int mat[FIL][COL], int n, int m)
{
	int i,j;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			cout<<mat[i][j]<<"  ";
		}
		cout<<endl;
	}
}

void mostrarmatdemat(matdemat mat[FIL][COL], int n, int m)
{
	int i,j;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			cout<<"la submatriz ["<<i<<"] ["<<j<<"] es: "<<endl;
			mostrar(mat[i][j].submat,mat[i][j].submatN,mat[i][j].submatM);
		}
	}
}

bool verifprimo(int n)
{
	int i;
	bool k=true;
	if (n>2)
	{
		for(i=2;i<n;i++)
		{
			if(n%i==0)
			{
				k=false;
			}
		}
	}
	return (k);
}

bool wichu (int mat[FIL][COL], int n, int m)
{
	int i,j;
	bool k=true;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			if(verifprimo(mat[i][j]==false))
			{
				k==false;
			}
		}
	}
	return(k);
}

void cargarvec(matdemat mat[FIL][COL], int n, int m, matdemat vec[FIL], int&x)
{
	int i,j,k,l;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			if(wichu(mat[i][j].submat,mat[i][j].submatN,mat[i][j].submatM)==true)
			{
				for(k=0;k<n;k++)
				{
					for(l=0;l<m;l++)
					{
						vec[x].submat[k][l]=mat[i][j].submat[k][l];
					}
				}
			}
		}
	}
}

	

void mostrarVec(matdemat vec[FIL], int x)
{
	int i;
	for (i=0;i<x;i++)
	{
		cout<<"la submatriz ["<<i<<"] es: ";
		mostrar(vec[i].submat,vec[i].submatN,vec[i].submatM);
	}
}

void main()
{
	int n, m, x=0;
	matdemat mat[FIL][COL], vec[FIL];
	cout<<"ingrese el numero de filas de la matriz principal: ";
	cin>>n;
	cout<<"ingrese el numero de columnas de la matriz principal: ";
	cin>>m;
	cargarmatdemat(mat,n,m);
	mostrarmatdemat(mat,n,m);
	cargarvec(mat,n,m,vec,x);
	mostrarVec(vec,x);
	getch();
}
	
